name: CI/CD

on:
  push:
    branches:
      - main

jobs:

  build:

    env:
        IMAGE: ghcr.io/${{ github.repository }}/${{ github.sha }}
        DEBUG: ${{ secrets.DEBUG }}
        SITE_URL: ${{ secrets.SITE_URL }}
        POSTGRES_DB: ${{ secrets.SQL_DATABASE }}
        POSTGRES_USER: ${{ secrets.SQL_USER }}
        SERVER_IP: ${{ secrets.SERVER_IP }}
        POSTGRES_PASSWORD: ${{ secrets.SQL_PASSWORD }}
        SQL_HOST: db
        SQL_PORT: ${{ secrets.SQL_PORT }}
        WEB_IMAGE: ghcr.io/${{ github.repository }}/${{ github.sha }}:web
        NGINX_IMAGE: ghcr.io/${{ github.repository }}/${{ github.sha }}:nginx 
        TRAEFIK_IMAGE: ghcr.io/${{ github.repository }}/${{ github.sha }}:traefik
        ID_COMPILACION: $GITHUB_SHA

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v2
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Setup environment variables
      run: |
        chmod +x ./setup_env.sh
        ./setup_env.sh
        cat ./.env

    - name: Build images
      run: |
        docker-compose -f docker-compose.ci.yml build
        docker push ${{ env.WEB_IMAGE }}
        docker push ${{ env.NGINX_IMAGE }}

  deploy:

    needs: build
    
    runs-on: ubuntu-latest
    
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SSH key 
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SERVER_SSH_KEY }}
        name: id_rsa
        
    - name: Add known hosts  
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    - name: Copy files via SSH
      env:
        SERVER_USER: ${{ secrets.SERVER_USER }}  
        SERVER_IP: ${{ secrets.SERVER_IP }}
      run: | 
        scp -o StrictHostKeyChecking=no -r ./.env ./docker-compose.prod.traefik.yml ${SERVER_USER}@${SERVER_IP}:/home/app

    - name: Deploy
      env:
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_IP: ${{ secrets.SERVER_IP }}  
      run: |
        ssh ${SERVER_USER}@${SERVER_IP} "bash ./deploy.sh"
