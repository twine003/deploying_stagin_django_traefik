name: CI/CD

on:
  push:
    branches:
      - main

jobs:

  build:

    runs-on: ubuntu-latest

    steps:
    - uses: actions/checkout@v2

    - name: Set up Docker Buildx
      uses: docker/setup-buildx-action@v1

    - name: Login to GitHub Container Registry
      uses: docker/login-action@v1
      with:
        registry: ghcr.io
        username: ${{ github.actor }}
        password: ${{ secrets.GITHUB_TOKEN }}

    - name: Print environment variables
      run: | 
        env
        
    - name: Setup environment variables
      run: |
        export IMAGE=ghcr.io/${{ github.repository }}/${{ github.sha }}
        export DEBUG=${{ secrets.DEBUG }}
        export SITE_URL=${{ secrets.SITE_URL }}
        export POSTGRES_DB=${{ secrets.SQL_DATABASE }}
        export POSTGRES_USER=${{ secrets.SQL_USER }}
        export SERVER_IP=${{ secrets.SERVER_IP }}
        export POSTGRES_PASSWORD=${{ secrets.SQL_PASSWORD }}
        export SQL_HOST=db
        export SQL_PORT=${{ secrets.SQL_PORT }}
        export WEB_IMAGE=$IMAGE:web
        export NGINX_IMAGE=$IMAGE:nginx 
        export TRAEFIK_IMAGE=$IMAGE:traefik
        export ID_COMPILACION=$GITHUB_SHA
        chmod +x ./setup_env.sh
        ./setup_env.sh

    - name: Build images
      run: | 
        ls
        pwd
        docker-compose -f docker-compose.ci.yml build
        docker push $WEB_IMAGE
        docker push $NGINX_IMAGE
        docker push $TRAEFIK_IMAGE

  deploy:

    needs: build
    
    runs-on: ubuntu-latest
    
    steps:

    - name: Checkout code
      uses: actions/checkout@v2

    - name: Install SSH key 
      uses: shimataro/ssh-key-action@v2
      with:
        key: ${{ secrets.SERVER_SSH_KEY }}
        name: id_rsa
        
    - name: Add known hosts  
      run: |
        ssh-keyscan -H ${{ secrets.SERVER_IP }} >> ~/.ssh/known_hosts
        chmod 644 ~/.ssh/known_hosts

    - name: Copy files via SSH
      env:
        SERVER_USER: ${{ secrets.SERVER_USER }}  
        SERVER_IP: ${{ secrets.SERVER_IP }}
      run: | 
        scp -o StrictHostKeyChecking=no -r ./.env ./docker-compose.prod.traefik.yml ${SERVER_USER}@${SERVER_IP}:/home/app

    - name: Deploy
      env:
        SERVER_USER: ${{ secrets.SERVER_USER }}
        SERVER_IP: ${{ secrets.SERVER_IP }}  
      run: |
        ssh ${SERVER_USER}@${SERVER_IP} "bash ./deploy.sh"
